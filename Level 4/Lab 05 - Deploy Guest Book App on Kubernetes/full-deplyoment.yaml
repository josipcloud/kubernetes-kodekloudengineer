apiVersion: apps/v1 
kind: Deployment 
metadata: 
  name: redis-master 
  labels: 
    app: redis-master 
spec: 
  replicas: 1 
  selector: 
    matchLabels: 
      app: redis-master 
  template: 
    metadata: 
      name: redis-master 
      labels: 
        app: redis-master 
    spec: 
      containers: 
        - name: master-redis-devops  
          image: redis 
          imagePullPolicy: IfNotPresent 
          resources: 
            requests: 
              cpu: "100m" 
              memory: "100Mi" 
          ports: 
            - containerPort: 6379 
      restartPolicy: Always 
--- 
apiVersion: v1 
kind: Service 
metadata: 
  name: redis-master 
spec: 
  selector: 
    app: redis-master 
  ports: 
    - protocol: TCP 
      port: 6379 
      targetPort: 6379 
  type: ClusterIP 
--- 
apiVersion: apps/v1 
kind: Deployment 
metadata: 
  name: redis-slave 
  labels: 
    app: redis-slave 
spec: 
  replicas: 2 
  selector: 
    matchLabels: 
      app: redis-slave 
  template: 
    metadata: 
      name: redis-slave 
      labels: 
        app: redis-slave 
    spec: 
      containers: 
        - name: slave-redis-devops 
          image: gcr.io/google_samples/gb-redisslave:v3 
          imagePullPolicy: IfNotPresent 
          resources: 
            requests: 
              cpu: "100m" 
              memory: "100Mi" 
          env: 
            - name: GET_HOSTS_FROM 
              value: dns 
          ports: 
            - containerPort: 6379 
      restartPolicy: Always 
--- 
apiVersion: v1 
kind: Service 
metadata: 
  name: redis-slave 
spec: 
  selector: 
    app: redis-slave 
  ports: 
    - protocol: TCP 
      port: 6389 
      targetPort: 6379 
  type: ClusterIP 
--- 
apiVersion: apps/v1 
kind: Deployment 
metadata: 
  name: frontend 
  labels: 
    app: frontend 
spec: 
  replicas: 3 
  selector: 
    matchLabels: 
      app: frontend 
  template: 
    metadata: 
      name: frontend 
      labels: 
        app: frontend 
    spec: 
      containers: 
        - name: php-redis-devops 
          image: gcr.io/google-samples/gb-frontend:v4 
          imagePullPolicy: IfNotPresent 
          resources: 
            requests: 
              cpu: "100m" 
              memory: "100Mi" 
          env: 
            - name: GET_HOSTS_FROM 
              value: dns 
          ports: 
            - containerPort: 80 
      restartPolicy: Always
--- 
apiVersion: v1 
kind: Service 
metadata: 
  name: frontend 
spec: 
  selector: 
    app: frontend 
  ports: 
    - protocol: TCP 
      port: 80 
      targetPort: 80 
      nodePort: 30009 
  type: NodePort